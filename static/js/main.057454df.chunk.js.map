{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["LoginForm","Fragment","for","type","id","value","className","RegisterForm","class","App","useState","registrationFormStatus","setRegistartionFormStatus","loginProps","useSpring","left","registerProps","loginBtnProps","borderBottom","registerBtnProps","button","onClick","style","form","action","div","herf","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAiEA,SAASA,IACP,OACE,eAAC,IAAMC,SAAP,WACE,uBAAOC,IAAI,WAAX,sBACA,uBAAOC,KAAK,OAAOC,GAAG,aACtB,uBAAOF,IAAI,WAAX,sBACA,uBAAOC,KAAK,OAAOC,GAAG,aACtB,uBAAOD,KAAK,SAASE,MAAM,QAAQC,UAAU,cAKnD,SAASC,IACP,OACE,eAAC,IAAMN,SAAP,WACE,uBAAOC,IAAI,WAAX,uBACA,uBAAOC,KAAK,OAAOC,GAAG,aACtB,uBAAOF,IAAI,QAAX,mBACA,uBAAOC,KAAK,OAAOC,GAAG,UACtB,uBAAOF,IAAI,WAAX,sBACA,uBAAOC,KAAK,OAAOC,GAAG,aACtB,uBAAOF,IAAI,kBAAX,8BACA,uBAAOC,KAAK,OAAOC,GAAG,oBACtB,uBAAOD,KAAK,SAASE,MAAM,WAAWG,MAAM,cAKnCC,MAzFf,WACE,MAA4DC,oBAAS,GAArE,mBAAOC,EAAP,KAA+BC,EAA/B,KACMC,EAAaC,oBAAU,CAC3BC,KAAMJ,GAA0B,IAAM,IAElCK,EAAgBF,oBAAU,CAC9BC,KAAMJ,EAAyB,EAAI,MAG/BM,EAAgBH,oBAAU,CAC9BI,aAAcP,EACV,wBACA,sBAEAQ,EAAmBL,oBAAU,CACjCI,aAAcP,EACV,oBACA,0BAUN,OACE,sBAAKL,UAAU,yBAAf,UACE,qBAAKA,UAAU,cACf,sBAAKA,UAAU,cAAf,UACE,cAAC,WAASc,OAAV,CACEC,QATR,WACET,GAA0B,IASpBR,GAAG,WACHkB,MAAOL,EAHT,mBAOA,cAAC,WAASG,OAAV,CACEC,QAnBR,WACET,GAA0B,IAmBpBR,GAAG,cACHkB,MAAOH,EAHT,yBAQF,sBAAKb,UAAU,aAAf,UACE,cAAC,WAASiB,KAAV,CAAeC,OAAO,GAAGpB,GAAG,YAAYkB,MAAOT,EAA/C,SACE,cAACb,EAAD,MAEF,cAAC,WAASuB,KAAV,CAAeC,OAAO,GAAGpB,GAAG,eAAekB,MAAON,EAAlD,SACE,cAACT,EAAD,SAGJ,cAAC,WAASkB,IAAV,CAAcnB,UAAU,eAAegB,MAAOT,EAA9C,SACE,mBAAGa,KAAK,IAAR,sEC/COC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.057454df.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { useSpring, animated } from \"react-spring\";\n\nfunction App() {\n  const [registrationFormStatus, setRegistartionFormStatus] = useState(false);\n  const loginProps = useSpring({ \n    left: registrationFormStatus ? -500 : 0, // Login form sliding positions\n  });\n  const registerProps = useSpring({\n    left: registrationFormStatus ? 0 : 500, // Register form sliding positions \n  });\n\n  const loginBtnProps = useSpring({\n    borderBottom: registrationFormStatus \n      ? \"solid 0px transparent\"\n      : \"solid 2px #ffffff\",  //Animate bottom border of login button\n  });\n  const registerBtnProps = useSpring({\n    borderBottom: registrationFormStatus\n      ? \"solid 2px #ffffff\"\n      : \"solid 0px transparent\", //Animate bottom border of register button\n  });\n\n  function registerClicked() {\n    setRegistartionFormStatus(true);\n  }\n  function loginClicked() {\n    setRegistartionFormStatus(false);\n  }\n\n  return (\n    <div className=\"login-register-wrapper\">\n      <div className=\"rectangle\" />\n      <div className=\"nav-buttons\">\n        <animated.button\n          onClick={loginClicked}\n          id=\"loginBtn\"\n          style={loginBtnProps}\n        >\n          Login\n        </animated.button>\n        <animated.button\n          onClick={registerClicked}\n          id=\"registerBtn\"\n          style={registerBtnProps}\n        >\n          Register\n        </animated.button>\n      </div>\n      <div className=\"form-group\">\n        <animated.form action=\"\" id=\"loginform\" style={loginProps}>\n          <LoginForm />\n        </animated.form>\n        <animated.form action=\"\" id=\"registerform\" style={registerProps}>\n          <RegisterForm />\n        </animated.form>\n      </div>\n      <animated.div className=\"forgot-panel\" style={loginProps}>\n        <a herf=\"#\">Forgot your password: Email - info@e3chophouse.com</a>\n      </animated.div>\n    </div>\n  );\n}\n\nfunction LoginForm() {\n  return (\n    <React.Fragment>\n      <label for=\"username\">USERNAME</label>\n      <input type=\"text\" id=\"username\" />\n      <label for=\"password\">PASSWORD</label>\n      <input type=\"text\" id=\"password\" />\n      <input type=\"submit\" value=\"Login\" className=\"submit\" />\n    </React.Fragment>\n  );\n}\n\nfunction RegisterForm() {\n  return (\n    <React.Fragment>\n      <label for=\"fullname\">full name</label>\n      <input type=\"text\" id=\"fullname\" />\n      <label for=\"email\">email</label>\n      <input type=\"text\" id=\"email\" />\n      <label for=\"password\">password</label>\n      <input type=\"text\" id=\"password\" />\n      <label for=\"confirmpassword\">confirm password</label>\n      <input type=\"text\" id=\"confirmpassword\" />\n      <input type=\"submit\" value=\"Register\" class=\"submit\" />\n    </React.Fragment>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}